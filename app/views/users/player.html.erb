<div>
    <p>logged in as <%= current_user.name %></p>
</div>

<div id="map"></div>
<div id="infowindow-content">
    <img src="" width="16" height="16" id="place-icon">
    <span id="place-name" class="title"></span><br>
    <span id="place-address"></span>
</div>

<input type="hidden" name="past_position" value="0.0" id="distance">

<%= stylesheet_link_tag 'home.css', media: "all", 'data-turbolinks-track': 'reload' %>

<div id="map"></div>
<div id="infowindow-content">
    <img src="" width="16" height="16" id="place-icon">
    <span id="place-name" class="title"></span><br>
    <span id="place-address"></span>
</div>
<div id="directions-panel"></div>

<script>
    var map, infoWindow, pos;
    
    function initMap() {
        console.log('Debug');

        var bounds = new google.maps.LatLngBounds;
        var geocoder = new google.maps.Geocoder;
        var markerArray = [];
        var directionsService = new google.maps.DirectionsService();
        var directionsDisplay = new google.maps.DirectionsRenderer();
        var service = new google.maps.DistanceMatrixService;

        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 35.5709605, lng: 139.63446 },
            zoom: 20,
        });

        directionsDisplay.setMap(map);
        infoWindow = new google.maps.InfoWindow;

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                console.log('lat: ', position.coords.latitude);
                console.log('lng: ', position.coords.longitude);

                infoWindow.setPosition(pos);
                infoWindow.setContent('Location found.');
                infoWindow.open(map);
                map.setCenter(pos);

            }, function () {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        } else {
            handleLocationError(false, infoWindow, map.getCenter());
        }

        calculateAndDisplayRoute(directionsService, directionsDisplay);
    }

    function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        directionsService.route({
            origin: pos,
            destination: document.cookie('end'),
            travelMode: 'WALKING'
        }, function (response, status) {
            if (status === 'OK') {
                directionsDisplay.setDirections(response);

                var distance = 0
                var route = response.routes[0];                
                console.log("Start:" + route.legs[0].start_address)
                console.log("End:" + route.legs[route.legs.length - 1].end_address)

                document.getElementById('distance').value = parseFloat(distance, 2)
                console.log("distance set:" + parseFloat(distance, 2))
            } else {
                window.alert('Directions request failed due to ' + status);
            }
        });
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
            'Error: The Geolocation service failed.' :
            'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
    }

</script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDGCQhxjnRfnXNtqTYOkhebzXSPtc5KQnY&libraries=places&callback=initMap"></script>
<script type="app/assets/javascripts" src=“timedropper.js></script>
<script type="app/assets/stylesheets" src=“timedropper.css></script>

<div>
    <h2>現在時刻</h2>
    <% time = Time.now %>
    <% str = time.strftime("%H:%M")%>
    <li>
        <%= "現在時刻：#{str}" %>
    </li>
</div>
<div class="btn_container">
    <input type="submit" value"送信する" class="btn btn-primary btn-lg'">
</div>
