<!--
// <div id="map"></div>
// <div id="infowindow-content">
//     <img src="" width="16" height="16" id="place-icon">
//     <span id="place-name" class="title"></span><br>
//     <span id="place-address"></span>
// </div>
-->

<script>
    var map, infoWindow, pos;
    
    function initMap() {
        var directionsService = new google.maps.DirectionsService();
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                
                console.log('lat: ', position.coords.latitude);
                console.log('lng: ', position.coords.longitude);

                calculateAndDisplayRoute(directionsService, pos);

            }, function () {
                handleLocationError(true);
            });
        } else {
            handleLocationError(false);
        }
    }

    function calculateAndDisplayRoute(directionsService, address) {        
        console.log('address: ', address)
        console.log('end:', '<%= current_user.end %>');

        directionsService.route({
            origin: pos,
            destination: '<%= current_user.end %>',
            travelMode: 'WALKING'
        }, function (response, status) {
            if (status === 'OK') {
                var distance = 0
                var route = response.routes[0]; 
                distance = route.legs[0].distance.value;
                
                console.log('destination', '<%= current_user.end %>')
                console.log('Distance: ', String(distance))

                console.log("Start:" + route.legs[0].start_address)
                console.log("End:" + route.legs[route.legs.length - 1].end_address)
                console.log("distance set:" + parseFloat(distance, 2))
        }
        });
    }

    function handleLocationError(browserHasGeolocation) {
        console.log("Error")
    }
</script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDGCQhxjnRfnXNtqTYOkhebzXSPtc5KQnY&libraries=places&callback=initMap"></script>
<script type="app/assets/javascripts" src=“timedropper.js></script>
<script type="app/assets/stylesheets" src=“timedropper.css></script>

<div>
    <h2>現在時刻</h2>
    <% time = Time.now %>
    <% str = time.strftime("%H:%M")%>
    <li>
        <%= "現在時刻：#{str}" %>
    </li>
</div>
<div class="btn_container">
    <input type="submit" value"送信する" class="btn btn-primary btn-lg'">
</div>